
colors:
  marginalCost: colors.red
  averageCost: colors.purple
  totalCost: colors.red

params:
  - name: a
    value: 0.5
    min: 0.1
    max: 0.75
    round: 0.05
  - name: p11
    value: 1
    min: 0.2
    max: 3
    round: 0.1
  - name: p12
    value: 2
    min: 0.4
    max: 3
    round: 0.1
  - name: m
    value: 20

calcs:
  c: params.m * ((params.p12/params.p11)^(params.a))
  p: params.p12/params.p11
aspectRatio: 0.9

layout:
  TwoVerticalGraphsPlusSidebar:

    topGraph:
      yAxis:
        title: Unità di $Y$
        max: 22
        min: 0
        ticks: 1
      xAxis:
        title: Unità di $X$
        max: 32
        min: 0
        ticks: 1
      objects:

        # Original indifference curve
        - EconIndifferenceCurve:
            utilityFunction:
              CobbDouglas: {alpha: (params.a)}
            level: params.m * ((params.a/params.p11)^(params.a)) * ((1-params.a)^(1-params.a))
            color: red
            label: dd
            strokeWidth: 1

        # New indifference curve
        - EconIndifferenceCurve:
            utilityFunction:
              CobbDouglas: {alpha: (params.a)}
            level: params.m * ((params.a/params.p12)^(params.a)) * ((1-params.a)^(1-params.a))
            color: red
            label: dd
            strokeWidth: 1

        # Original budget line
        - Line:
            slope: -params.p11
            point: [0,params.m]
            color: blue
            label:
              text: VB
              x: 33
              position: tl
            strokeWidth: 1

        # New budget line
        - Line:
            slope: -params.p12
            point: [0,params.m]
            color: blue
            label:
              text: VB
              x: 33
              position: tl
            strokeWidth: 1

        # Compensated budget line
        - Line:
            slope: -params.p12
            point: [0,calcs.c]
            color: blue
            label:
              text: VB
              x: 33
              position: tl
            strokeWidth: 1

        # Original optimum
        - Point:
            coordinates: [params.a*params.m/params.p11,(1-params.a)*params.m]
            droplines:
              vertical: math.round((params.a)*(params.m)/(params.p11), 1)
            color: Blue

        # New optimum
        - Point:
            coordinates: [params.a*params.m/params.p12,(1-params.a)*params.m]
            droplines:
              vertical: math.round((params.a)*(params.m)/(params.p12), 1)

        # Compensated optimum
        - Point:
            coordinates: [params.a*calcs.c/params.p12,(1-params.a)*calcs.c]
            droplines:
              vertical: math.round((params.a)*(calcs.c)/(params.p12), 1)
            color: Purple

    bottomGraph:
      yAxis:
        title: Euro
        max: 3.2
        ticks: 0
      xAxis:
        title: Unità di $X$
        max: 32
        ticks: 0
      objects:

        # Walrasian demand function
        - Curve:
            fn: params.a * params.m / (x)
            color: Blue
            label:
              text: x_1
              x: 25
              position: bl
              bgcolor: none
            strokeWidth: 1.7
            max: 

        # Hicksian demand function
        - Curve:
            fn: (( params.a * params.m ) / ( (x) * ((params.p11)^params.a) ))^(1/(1-params.a))
            color: Purple
            label:
              text: x^c_1
              x: 28
              position: bl
              bgcolor: none
            strokeWidth: 1.7

        # Original optimum
        - Point:
            coordinates: [params.a*params.m/params.p11,params.p11]
            droplines:
              vertical: math.round((params.a)*(params.m)/(params.p11), 1)
              horizontal: math.round(params.p11, 1)
            color: Blue

        # New optimum
        - Point:
            coordinates: [params.a*params.m/params.p12,params.p12]
            droplines:
              vertical: math.round((params.a)*(params.m)/(params.p12), 1)
              horizontal: math.round(params.p12, 1)

        # Compensated optimum
        - Point:
            coordinates: [params.a*calcs.c/params.p12,params.p12]
            droplines:
              vertical: math.round((params.a)*(calcs.c)/(params.p12), 1)
              horizontal:
            color: Purple

        # Negative variation in CS when price increases
        - Area:
            fn1: min(params.p12,((params.a*params.m)/((x)*((params.p11)^params.a)))^(1/(1-params.a)),(params.a*params.m)/(x))
            fn2: min(params.p11,params.p12)
            fill: Red
            opacity: 0.3
            min: 0
            max: max(params.a*params.m/params.p11,params.a*calcs.c/params.p12)

        # Difference between CV and DeltaCS when price increases
        - Area:
            fn1: min(params.p12,((params.a*params.m)/((x)*((params.p11)^params.a)))^(1/(1-params.a)))
            fn2: min((params.a*params.m)/(x),params.p12)
            fill: Purple
            opacity: 0.3
            min: 0
            max: max(params.a*params.m/params.p11,params.a*calcs.c/params.p12)

        # Positive variation in CS when price decreases
        - Area:
            fn1: min(params.p11,((params.a*params.m)/((x)*((params.p11)^params.a)))^(1/(1-params.a)))
            fn2: min(params.p11,params.p12)
            fill: Green
            min: 0
            max: max(params.a*params.m/params.p11,params.a*calcs.c/params.p12)

        # Difference between CV and DeltaCS when price increases
        - Area:
            fn1: min(params.p11,(params.a*params.m)/(x))
            fn2: min(params.p11,max((params.p12),((params.a*params.m)/((x)*((params.p11)^params.a)))^(1/(1-params.a))))
            fill: Blue
            opacity: 0.2
            min: 0
            max: params.a*params.m/params.p12


    sidebar:
      controls:
      - title: From individual ITA demand to market demand
        description:
        sliders:
        - param: a
          label: \alpha
        - param: p11
          label: p_1
        - param: p12
          label: p'_1
        divs:
          - html: $N$ consumers with demand $$x(P)=\frac{\alpha M}{P_X}$$

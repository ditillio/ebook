
schema: EconSchema
params:
- {name: op1, value: 0.15}
- {name: op2, value: 0.1}
- {name: ops, value: 0.2}
- {name: a, value: 0.5}
- {name: m, value: 20}
- {name: num, value: 500, min: 100, max: 1000, round: 10}
- {name: p, value: 4, min: 1, max: 10}
- {name: s, min: 0.01, max: 1.8, value: 0.5, round: 0.01}
- {name: showCS, value: false}

calcs:
  d: (params.a*params.m/params.p)
  D: (calcs.d*params.num)

layout:
  TwoHorizontalGraphsPlusSidebar:
    leftGraph:
      xAxis:
        ticks: 5
        max: 11
        title: Unità del bene
      yAxis:
        max: 11
        ticks: 10
        title: Euro
      objects:

# individual demand
      - Curve:
          fn: (params.a*params.m/(x))
          color: Blue
          strokeWidth: 1.5

# price line
      - Line:
          yIntercept: params.p
          color: Green
          label:
            text: P
            x: 10.5
            position: bl
          drag:
            - vertical: p

# optimum
      - Point:
          coordinates: [calcs.d, params.p]
          droplines:
            vertical: calcs.d.toFixed(1)
          color: Blue

# consumer surplus blue
      - Area: {fn1: (params.a*params.m/(x)), fn2: params.p, fill: Blue, opacity: params.ops, min: 0, max: calcs.d, show: params.showCS == true }

    rightGraph:
      xAxis:
        max: 11000
        ticks: 5
        title: Unità del bene
      yAxis:
        max: 11
        ticks: 10
        title: Euro
      objects:

# market demand
      - Curve:
          fn: (params.num)*(params.a)*(params.m)/(x)
          color: Blue
          strokeWidth: 1.5

# price line
      - Line:
          yIntercept: params.p
          color: budget
          label:
            text: P
            x: 10500
            position: bl
          drag:
            - vertical: p
          strokeWidth: 1.5

# optimum
      - Point:
          coordinates: [calcs.D, params.p]
          droplines:
            vertical: params.num*math.round(calcs.d,1)
          color: Blue

# consumer surplus blue
      - Area: {fn1: (params.num*params.a*params.m/(x)), fn2: params.p, fill: Blue, opacity: params.ops, min: 0, max: calcs.D, show: params.showCS == true }


    sidebar:
      controls:
      - title: Domanda di un bene perfettamente divisibile
        checkboxes:
        - param: showCS
          label: "\\text{Mostra surplus del consumatore.}"
        sliders:
        - param: p
          label: P
        - param: num
          label: N
